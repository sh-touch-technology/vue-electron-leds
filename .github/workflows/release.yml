name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18]

    steps:
      - name: 1. 读取仓库
        uses: actions/checkout@v3

      - name: 2. 准备 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # ✅ 添加构建工具（只在 Windows 下执行）
      - name: 2.1 安装 Windows 构建工具
        if: matrix.os == 'windows-latest'
        run: |
          npm install -g node-gyp
        shell: cmd

      - name: 2.2 安装 Python 和 MSBuild（用于 node-gyp）
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 2.3 安装 MSBuild
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.3.1

      - name: 3. 安装依赖
        run: npm install

      - name: 4. 为 Linux 平台单独打包
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run electron:linux-build --linux
        env:
          GH_TOKEN: ${{ secrets.SHKJ_CLIENT_RELEASE_TOKEN }}

      - name: 4. 为 Windows 平台单独打包
        if: matrix.os == 'windows-latest'
        run: |
          npm run electron:win-build --win
        env:
          GH_TOKEN: ${{ secrets.SHKJ_CLIENT_RELEASE_TOKEN }}

      - name: 5. 创建 Release 草稿
        run: gh release create ${{ github.ref_name }} --draft
        env:
          GH_TOKEN: ${{ secrets.SHKJ_CLIENT_RELEASE_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 1. 读取仓库
        uses: actions/checkout@v3

      - name: 2. 发布正式 Release
        run: gh release edit ${{ github.ref_name }} --draft=false
        env:
          GH_TOKEN: ${{ secrets.SHKJ_CLIENT_RELEASE_TOKEN }}
