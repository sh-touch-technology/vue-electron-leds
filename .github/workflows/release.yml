name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18]

    steps:
      - name: 1. 读取仓库
        uses: actions/checkout@v3

      - name: 2. 准备 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 3. 安装依赖（强制从源码构建）
        run: npm install
        env:
          npm_config_build_from_source: true

      - name: 4. electron-rebuild 修复原生模块
        run: npx electron-rebuild -f -w @serialport/bindings-cpp

      - name: 5. 为 Linux 平台打包
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:linux-build
        env:
          GH_TOKEN: ${{ secrets.SHKJ_DEMO_RELEASE_TOKEN }}

      - name: 5. 为 Windows 平台打包
        if: matrix.os == 'windows-latest'
        run: npm run electron:win-build
        env:
          GH_TOKEN: ${{ secrets.SHKJ_DEMO_RELEASE_TOKEN }}

      - name: 6. 创建 Release 草稿
        run: gh release create ${{ github.ref_name }} --draft
        env:
          GH_TOKEN: ${{ secrets.SHKJ_DEMO_RELEASE_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 1. 读取仓库
        uses: actions/checkout@v3

      - name: 2. 发布正式 Release
        run: gh release edit ${{ github.ref_name }} --draft=false
        env:
          GH_TOKEN: ${{ secrets.SHKJ_DEMO_RELEASE_TOKEN }}
